{"remainingRequest":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/thread-loader/dist/cjs.js!/Users/nikolajegeskovnielsen/vue-hygs/node_modules/babel-loader/lib/index.js!/Users/nikolajegeskovnielsen/vue-hygs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nikolajegeskovnielsen/vue-hygs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolajegeskovnielsen/vue-hygs/src/views/Create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolajegeskovnielsen/vue-hygs/src/views/Create.vue","mtime":1589135586092},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcG9zdFJlZiB9IGZyb20gIi4uL2ZpcmViYXNlLWRiIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdjcmVhdGUnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0OiB7CiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBpbWFnZTogbnVsbAogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgdHJpZ2dlckNob29zZUltZzogZnVuY3Rpb24gdHJpZ2dlckNob29zZUltZygpIHsKICAgICAgdGhpcy4kcmVmcy5maWxlSW5wdXQuY2xpY2soKTsKICAgIH0sCiAgICBwcmV2aWV3SW1hZ2U6IGZ1bmN0aW9uIHByZXZpZXdJbWFnZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBpbWFnZUZpbGUgPSB0aGlzLiRyZWZzLmZpbGVJbnB1dC5maWxlc1swXTsKICAgICAgdmFyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoKICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICBfdGhpcy5wb3N0LmltYWdlID0gZXZlbnQudGFyZ2V0LnJlc3VsdDsKICAgICAgfTsKCiAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChpbWFnZUZpbGUpOwogICAgfSwKICAgIGNyZWF0ZVBvc3Q6IGZ1bmN0aW9uIGNyZWF0ZVBvc3QoKSB7CiAgICAgIHBvc3RSZWYuYWRkKHRoaXMucG9zdCk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,SAAA,OAAA,QAAA,gBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA;AAHA;AADA,KAAA;AAQA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AAAA;;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,UAAA,GAAA,IAAA,UAAA,EAAA;;AACA,MAAA,UAAA,CAAA,MAAA,GAAA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,KAAA,GAAA,KAAA,CAAA,MAAA,CAAA,MAAA;AACA,OAFA;;AAGA,MAAA,UAAA,CAAA,aAAA,CAAA,SAAA;AACA,KAXA;AAYA,IAAA,UAZA,wBAYA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,IAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AAfA;AAZA,CAAA","sourcesContent":["<template>\n  <div class=\"create\">\n    <h1>Here you can add a new post</h1>\n    <form>\n      <input type=\"text\" v-model=\"post.title\" placeholder=\"type the title here\" required>\n      <input type=\"text\" v-model=\"post.description\" placeholder=\"type the description here\">\n      <input type=\"file\" ref=\"fileInput\" accept=\"image/*\" v-on:change=\"previewImage\">\n      <button class=\"add-image\" type=\"button\" v-on:click=\"triggerChooseImg\">choose Image</button>\n      <div>\n        <img :src=\"post.image\" class=\"image-preview\">\n      </div>\n      <button type=\"button\" v-on:click=\"createPost\">Create Post</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { postRef } from \"../firebase-db\"\nexport default {\nname: 'create',\ndata () {\n  return{\n    post: {\n      title:'',\n      description:'',\n      image: null\n    }\n  }\n  \n},\nmethods:{\n  triggerChooseImg(){\n    this.$refs.fileInput.click()\n  },\n  previewImage () {\n    const imageFile = this.$refs.fileInput.files[0]\n    const fileReader = new FileReader()\n    fileReader.onload = (event) => {\n      this.post.image = event.target.result\n    }\n    fileReader.readAsDataURL(imageFile)\n  },\n    createPost () {\n      postRef.add(this.post)\n      this.$router.push('/')\n    }\n  }\n}\n  \n</script>\n\n<style>\nform {\n  padding: 2em 1em 2.5em;\n}\nbutton {\n  text-align: center;\n  cursor: pointer;\n  border: none;\n  padding: 12px 15px;\n  font-size: 1em;\n  border-radius: 0;\n  color: var(--text-color-light);\n  background-color: var(--secondary);\n  width: 100%;\n  max-width: 350px;\n}\nbutton.choose-image {\n  background-color: var(--primary);\n}\nbutton{\n background-color:#42b983;\n color: white;\n}\ninput {\n  margin: 1em auto;\n  width: 100%;\n  max-width: 350px;\n  padding: 12px 15px;\n  box-sizing: border-box;\n  display: block;\n}\ninput[type=\"file\"] {\n    display: none;\n}\n.image-preview {\n  max-width: 350px;\n  width: 100%;\n  padding: 1em 0;\n}\n</style>"],"sourceRoot":"src/views"}]}