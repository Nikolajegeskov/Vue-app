{"remainingRequest":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolajegeskovnielsen/vue-hygs/src/components/details.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikolajegeskovnielsen/vue-hygs/src/components/details.vue","mtime":1589137161045},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikolajegeskovnielsen/vue-hygs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHBvc3RSZWYgfSBmcm9tICIuLi9maXJlYmFzZS1kYiIKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6J2RldGFsaXMnLAogIGRhdGEoKXsKICAgICAgcmV0dXJuewogICAgICAgIHBvc3RzOltdLAogICAgICAgIHByb0lkOnRoaXMuJHJvdXRlLnBhcmFtcy5QaWQsICAgIAogICAgICAgIHRpdGxlOiJkZXRhaWxzIiwKICAgICAgICBuZXdQb3N0OiAnJywKICAgICAgICBuZXdQb3N0VGl0bGU6JycsCiAgICAgICAgbmV3UG9zdERpczogJycsCiAgICAgICAgbmV3UG9zdEltZzonJywKICAgICAgICBub3dFZGl0OicnLAogICAgICAgIGhpZGU6IGZhbHNlCiAgICAgIH0KICB9LAogICAgZmlyZXN0b3JlOnsKICAgICAgcG9zdHM6IHBvc3RSZWYKICB9LAogIG1ldGhvZHM6ewogICAgICB0cmlnZ2VyQ2hvb3NlSW1nKCl7CiAgICB0aGlzLiRyZWZzLmZpbGVJbnB1dC5jbGljaygpCiAgfSwKICBwcmV2aWV3SW1hZ2UgKCkgewogICAgY29uc3QgaW1hZ2VGaWxlID0gdGhpcy4kcmVmcy5maWxlSW5wdXQuZmlsZXNbMF0KICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpCiAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IChldmVudCkgPT4gewogICAgICB0aGlzLnBvc3QuaW1hZ2UgPSBldmVudC50YXJnZXQucmVzdWx0CiAgICB9CiAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoaW1hZ2VGaWxlKQogIH0sCiAgICBlZGl0IChwb3N0KSB7CiAgICAgIHRoaXMubm93RWRpdD1wb3N0LmlkCiAgICAgIHRoaXMubmV3UG9zdFRpdGxlID0gcG9zdC50aXRsZQogICAgICB0aGlzLm5ld1Bvc3REaXMgPSBwb3N0LmRlc2NyaXB0aW9uCiAgICAgIHRoaXMubmV3UG9zdEltZyA9IHBvc3QuaW1hZ2UKICAgICAgcG9zdFJlZi5kb2ModGhpcy5ub3dFZGl0KS51cGRhdGUoewogICAgICAgIHRpdGxlOiB0aGlzLm5ld1Bvc3RUaXRsZSwKICAgICAgICBkZXNjcmlwdGlvbjp0aGlzLm5ld1Bvc3REaXMsCiAgICAgICAgaW1hZ2U6IHRoaXMubmV3UG9zdEltZwogICAgICB9KQogICB9CiAgfQp9ICAK"},{"version":3,"sources":["details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"details.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"details\">\n        <div class=\"container\" v-for=\"(post,Pid) in posts\" :key=\"Pid\">\n            <div class=\"flex-container\" v-if=\"proId == post.id\">\n            <h1 class=\"title\">{{post.title}}</h1>\n            <p class=\"dis\">{{post.description}}</p>\n            <img class=\"img\" :src=\"post.image\" alt/>\n            <button class=\"hide-btn\" v-on:click=\"hide = !hide\">edit</button>\n            <div class=\"edit\" v-if=\"hide\"> \n              <input type=\"text\" v-model=\"post.title\" placeholder=\"type the title here\" required>\n              <input type=\"text\" v-model=\"post.description\" placeholder=\"type the description here\">\n            <div>\n            </div>\n              <button type=\"button\" v-on:click=\"edit(post)\">edit</button>\n            </div>\n            </div>\n            </div>\n            </div>\n</template>\n<script>\nimport { postRef } from \"../firebase-db\"\nexport default {\n  name:'detalis',\n  data(){\n      return{\n        posts:[],\n        proId:this.$route.params.Pid,    \n        title:\"details\",\n        newPost: '',\n        newPostTitle:'',\n        newPostDis: '',\n        newPostImg:'',\n        nowEdit:'',\n        hide: false\n      }\n  },\n    firestore:{\n      posts: postRef\n  },\n  methods:{\n      triggerChooseImg(){\n    this.$refs.fileInput.click()\n  },\n  previewImage () {\n    const imageFile = this.$refs.fileInput.files[0]\n    const fileReader = new FileReader()\n    fileReader.onload = (event) => {\n      this.post.image = event.target.result\n    }\n    fileReader.readAsDataURL(imageFile)\n  },\n    edit (post) {\n      this.nowEdit=post.id\n      this.newPostTitle = post.title\n      this.newPostDis = post.description\n      this.newPostImg = post.image\n      postRef.doc(this.nowEdit).update({\n        title: this.newPostTitle,\n        description:this.newPostDis,\n        image: this.newPostImg\n      })\n   }\n  }\n}  \n</script>\n<style>\n/* edit */\nbutton {\n  text-align: center;\n  cursor: pointer;\n  border: none;\n  padding: 12px 15px;\n  font-size: 1em;\n  border-radius: 0;\n  color: var(--text-color-light);\n  background-color: var(--secondary);\n  width: 100%;\n  max-width: 350px;\n}\nbutton.choose-image {\n  background-color: var(--primary);\n}\nbutton{\n background-color:#42b983;\n color: white;\n}\ninput {\n  margin: 1em auto;\n  width: 100%;\n  max-width: 350px;\n  padding: 12px 15px;\n  box-sizing: border-box;\n  display: block;\n}\ninput[type=\"file\"] {\n    display: none;\n}\n.image-preview {\n  max-width: 350px;\n  width: 100%;\n  padding: 1em 0;\n}\n.flex-container{\nwidth: 100%;\nheight: 100%;\n}\n.DImg{\n    max-width: 350px;\n  width: 100%;\n}\n.flex-container{\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr ;\ngrid-template-rows: 50px 50px 265px 1fr;\ngrid-template-areas:\n\". title .\"\n\". dis .\"\n\". img .\"\n\". hide-btn .\"\n\". edit .\"\n;\n}\n.img{\njustify-self: center;\ngrid-area: img;\n}\n.title{\ngrid-area: title;\n}\n.dis{\ngrid-area: dis;\n}\n.hide-btn{\njustify-self: center;\ngrid-area: hide-btn;\ntext-align: center;\n  cursor: pointer;\n  border: none;\n  padding: 12px 15px;\n  font-size: 1em;\n  border-radius: 0;\n  color: white;\n  background-color: #42b983;\n  width: 100%;\n  max-width: 350px;\n  height: 50px;\n}\n.edit{\ngrid-area: edit;\n}\n</style>"]}]}